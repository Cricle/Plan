<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44416</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <ApplicationInsightsResourceId>/subscriptions/99a95d96-c9ef-433f-bffd-0dfc7d373245/resourcegroups/Anf/providers/Microsoft.Insights/components/Plan</ApplicationInsightsResourceId>
    <UserSecretsId>9ea7667e-c9a0-472e-9e7e-2da4cebe5ea0</UserSecretsId>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <NoWarn>CS1591;</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DbSelect>SQLITE</DbSelect>
    <DefineConstants>$(DefineConstants);REDIS_LOCAL</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'!='Debug'">
    <DbSelect>MSSQL</DbSelect>
    <DefineConstants>$(DefineConstants);REDIS_REMOTE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(DbSelect)'=='MSSQL'">
    <DefineConstants>$(DefineConstants);DBSELECT_MSSQL</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(DbSelect)'=='SQLITE'">
    <DefineConstants>$(DefineConstants);DBSELECT_SQLITE</DefineConstants>
  </PropertyGroup>
  <ItemGroup Condition="'$(DbSelect)'=='SQLITE'">
    <PackageReference Include="System.Data.SQLite" Version="1.0.115.5" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" Version="1.0.0" />
    <PackageReference Include="Azure.Identity" Version="1.4.0" />
    <PackageReference Include="Azure.Storage.Blobs" Version="12.3.0" />
    <PackageReference Include="Azure.Storage.Files.Shares" Version="12.1.0" />
    <PackageReference Include="Azure.Storage.Queues" Version="12.2.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.20.0" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="6.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.2" />
    <!--<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />-->
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.2" />
    <PackageReference Include="Microsoft.Azure.SignalR" Version="1.4.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="6.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.2" />
    <PackageReference Include="Microsoft.Extensions.Azure" Version="1.0.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="6.0.2" />
    <PackageReference Include="MongoDB.Driver" Version="2.14.1" />
    <PackageReference Include="Quartz.AspNetCore" Version="3.3.3" />
    <PackageReference Include="Quartz.Serialization.Json" Version="3.3.3" />
    <PackageReference Include="RedLock.net" Version="2.3.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.2.3" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.2.3" />
    <PackageReference Include="Microsoft.IO.RecyclableMemoryStream" Version="2.2.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Plan.Identity\Plan.Identity.csproj" />
    <ProjectReference Include="..\Plan.Services\Plan.Services.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Sql\*.sql">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
